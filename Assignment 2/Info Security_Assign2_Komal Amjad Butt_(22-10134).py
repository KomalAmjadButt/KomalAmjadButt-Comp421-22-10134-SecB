# -*- coding: utf-8 -*-
"""Info Security_Assign2_Komal Amjad Butt (22-10134).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UkVsnqT4gfYmyerlNPL9liKR4sB9ZPzX

Importing Library:

!pip install pycryptodome"""

"""Generating RSA Public and Private Keys:"""

from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import binascii
 
keyPair = RSA.generate(3072)
 
pubKey = keyPair.publickey()                                   #Generating public key 
print(f"Public key:  (n={hex(pubKey.n)}, e={hex(pubKey.e)})")    
pubKeyPEM = pubKey.exportKey()
print(pubKeyPEM.decode('ascii'))
 
print(f"Private key: (n={hex(pubKey.n)}, d={hex(keyPair.d)})")
privKeyPEM = keyPair.exportKey()                               #Generating private key 
print(privKeyPEM.decode('ascii'))

"""ENCRYPT input message:"""

msg = input("Enter message to be encrypted: ")    #Taking input message to be encrypted from the user 
m = bytes(msg, 'ascii')    #Converting string to bytes for the encryption algorithm  

encryptor = PKCS1_OAEP.new(pubKey)
encrypted = encryptor.encrypt(m)                  #Encrypting/Encoding Message 
print("Encrypted: ", binascii.hexlify(encrypted))

"""DECRYPT the encrypted message:"""

decryptor = PKCS1_OAEP.new(keyPair)
decrypted = decryptor.decrypt(encrypted)         #Decrypting/Decoding Message 
print("Decrypted: ", decrypted)
